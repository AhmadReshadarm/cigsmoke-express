{
  "swagger": "2.0",
  "info": {
    "description": "Cigsmoke API Docs",
    "version": "1.0.0",
    "title": "Cigsmoke",
    "termsOfService": "http://swagger.io/terms/"
  },
  "basePath": "/",
  "paths": {
    "/brands": {
      "get": {
        "tags": [
          "brand"
        ],
        "summary": "Get array of brands",
        "description": "",
        "operationId": "getBrands",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Brand"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "brand"
        ],
        "summary": "Create a brand",
        "description": "",
        "operationId": "createBrand",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brand"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Brand request"
          }
        }
      }
    },
    "/brands/{brandId}": {
      "get": {
        "tags": [
          "brand"
        ],
        "summary": "Find brand by id",
        "operationId": "findBrandById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "description": "ID of brand to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Brand"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Brand not found"
          }
        }
      },
      "put": {
        "tags": [
          "brand"
        ],
        "summary": "Update the brand",
        "description": "",
        "operationId": "updateBrand",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "description": "ID of brand to return",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful updated",
            "schema": {
              "type": "object",
              "properties": {
                "raw": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                },
                "affected": {
                  "type": "integer",
                  "description": "qty of updated rows"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Brand request"
          },
          "404": {
            "description": "Brand not found"
          }
        }
      },
      "delete": {
        "tags": [
          "brand"
        ],
        "summary": "Delete the brand",
        "description": "",
        "operationId": "deleteBrand",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "description": "ID of brand to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful deleted",
            "schema": {
              "type": "object",
              "properties": {
                "raw": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                },
                "affected": {
                  "type": "integer",
                  "description": "qty of updated rows"
                }
              }
            }
          },
          "404": {
            "description": "Brand not found"
          }
        }
      }
    },
    "/getBrandsByCategory/{categoryUrl}": {
      "get": {
        "tags": [
          "brand"
        ],
        "summary": "Get array of brands by category url",
        "description": "",
        "operationId": "getBrandsByCategoryUrl",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "ID of category",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Brand"
              }
            }
          },
          "404": {
            "description": "Category not found"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Brand": {
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Brand"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
